# 2. Instalar paquetes y Ajustes------
install.packages("readxl")
par(mfrow=c(1,1))
options(scipen=999)
# 3. Bases de datos ----------
library(readxl)
data <- read_excel("Ejemplo.xlsx")
# 4. Gráficos ----------
plot(data$Ingreso, data$Ahorro, type="l")
abline(v=2347.3, col="purple")
# 4.1. Muestra total: 1970-1995 --------
plot(data$Ingreso, data$Ahorro,
xlab="Ahorro",
ylab="Ingreso",
main="1970-1995",
type="l")
abline(v=2347.3, col="purple")
# 4.2. Muestra 1: 1970-1981 ------
par(mfrow=c(1,2))
muestra1 <- subset(data, Año<1982)
plot(muestra1$Ingreso, muestra1$Ahorro,
xlab="Ahorro",
ylab="Ingreso",
main="1970-1981")
# Agregar la linea de regresion (y~x)
abline(lm(muestra1$Ahorro~muestra1$Ingreso), col="red")
# 4.3. Muestra 2: 1982-1995 ------
muestra2 <- subset(data, Año>=1982)
plot(muestra2$Ingreso, muestra2$Ahorro,
xlab="Ahorro",
ylab="Ingreso",
main="1982-1995")
# Agregar la linea de regresion (y~x)
abline(lm(muestra2$Ahorro~muestra2$Ingreso), col="red")
# 5.1, Modelo total -------
attach(data)
model <- lm(Ahorro ~ Ingreso, data=data)
summary(model)
# Suma Cuadrado de los errores
SCR <- deviance(model)
SCR
# 5.2. Modelo primera muestra -------
model1 <-  lm(Ahorro ~ Ingreso, data=muestra1)
summary(model1)
# Suma Cuadrado de los errores
SCR1 <- deviance(model1)
SCR1
# 5.3. Modelo segunda muestra -------
model2 <-  lm(Ahorro ~ Ingreso, data=muestra2)
summary(model2)
# Suma Cuadrado de los errores
SCR2 <- deviance(model2)
SCR2
SCR_REST  =SCR
SCR_NOREST=SCR1 + SCR2
k=2
n1=12
n2=14
# Test de Chow
Fc <- ((SCR_REST-SCR_NOREST)/k)/((SCR_NOREST)/(n1+n2-(2*k)))
Fc
pv <- pf(Fc,k,n1+n2-(2*k), lower.tail = FALSE)
pv
# F tabla al 1%
Ft <- qf(0.01,k,n1+n2-(2*k),lower.tail=FALSE)
Ft
install.packages("strucchange")
library(strucchange)
sctest(Ahorro ~ Ingreso, "Chow", point=12)
# Identificación de numero de coeficientes inicial
model <- lm(Ahorro ~ Ingreso, data=data)
# Coeficientes recursivos
df <- data.frame(Ahorro, Ingreso)
df
n  <- (nrow(coef(summary(model))))+1   # k+1
n
# Recursividad
estimador <- lapply(seq(n, nrow(df)),
function(x) lm(Ahorro ~ Ingreso, data = df[1:x,]))
# Número de regresiones
g  <- length(estimador)
g
# Regresión
estimador[[10]]
summary(estimador[[10]])
# Extractor de parametros recursivos
b1 <- unlist(sapply(1:g,function(j) estimador[[j]]$coefficients[1]))
b2 <- unlist(sapply(1:g,function(j) estimador[[j]]$coefficients[2]))
b1
b2
# extractor de niveles de confianza
conf1 <- unlist(sapply(1:g, function(k) confint.default(estimador[[k]],1)))
conf2 <- unlist(sapply(1:g, function(k) confint.default(estimador[[k]],2)))
conf1
conf2
# arreglo de datos en forma matricial
arrb1 <- cbind(b1, t(conf1))
arrb1
arrb2 <- cbind(b2, t(conf2))
arrb2
# Graficas
par(mfrow=c(1,2))
matplot(arrb1,
type="l",
xlab="Tiempo",
ylab="Valores del parámetro estimado",
main="Estimación recursiva de b_0")
abline(v=11, col="purple")
matplot(arrb2,
type="l",
xlab="Tiempo",
ylab="Valores del parámetro estimado",
main="Estimación recursiva de b_1")
abline(v=11, col="purple")
# 8. Prueba CUSUM y CUSUM cuadrado -------
install.packages("strucchange")
install.packages("strucchange")
library(strucchange)
par(mfrow=c(1,1))
attach(data)
rel <- Ahorro ~ Ingreso
rcres=recresid(rel)
rcres
cusum <- efp(rel, type=c("Rec-CUSUM"))
cusum
plot(cusum)
sctest(rel)
lm(Ahorro ~ Ingreso, data)
summary(model1)
residuals(model1)
model1 <- lm(Ahorro ~ Ingreso, data)
View(data)
lresi <- residuals(model1)
lcum=cumsum(lresi)/sd(lresi)
lN=length(lresi)
lcumq=cumsum(lresi^2)/sum(lresi^2)
Af=0.948
co=0.14422
lLS=Af*sqrt(lN)+2*Af*c(1:length(lresi))/sqrt(lN)
lLI=-lLS
lLQS=co+(1:length(lresi))/lN
lLQI=-co+(1:length(lresi))/lN
plot(lcum,type="l",ylim=c(min(lLI),max(lLS)),xlab="t",ylab="",main="CUSUM")
lines(lLS,type="S",col="red")
lines(lLI,type="S",col="red")
plot(lcumq,type="l",xlab="t",ylab="",main="CUSUMSQ")
lines(lLQS,type="S",col="red")
lines(lLQI,type="S",col="red")
plot(lcum,type="l",ylim=c(min(lLI),max(lLS)),xlab="t",ylab="",main="CUSUM")
lines(lLS,type="S",col="red")
lines(lLI,type="S",col="red")
co=12
lLS=Af*sqrt(lN)+2*Af*c(1:length(lresi))/sqrt(lN)
lLI=-lLS
lLQS=co+(1:length(lresi))/lN
lLQI=-co+(1:length(lresi))/lN
plot(lcum,type="l",ylim=c(min(lLI),max(lLS)),xlab="t",ylab="",main="CUSUM")
lines(lLS,type="S",col="red")
lines(lLI,type="S",col="red")
plot(lcumq,type="l",xlab="t",ylab="",main="CUSUMSQ")
lines(lLQS,type="S",col="red")
lines(lLQI,type="S",col="red")
plot(lcumq,type="l",xlab="t",ylab="",main="CUSUMSQ")
lines(lLQS,type="S",col="red")
lines(lLQI,type="S",col="red")
co=0.12
lLS=Af*sqrt(lN)+2*Af*c(1:length(lresi))/sqrt(lN)
lLI=-lLS
lLQS=co+(1:length(lresi))/lN
lLQI=-co+(1:length(lresi))/lN
plot(lcum,type="l",ylim=c(min(lLI),max(lLS)),xlab="t",ylab="",main="CUSUM")
lines(lLS,type="S",col="red")
lines(lLI,type="S",col="red")
plot(lcumq,type="l",xlab="t",ylab="",main="CUSUMSQ")
lines(lLQS,type="S",col="red")
lines(lLQI,type="S",col="red")
lN
lcumq
Af=0.948
co=0.05
lLS
lN
c(1:length(lresi))
lN
lLQS=co+(1:length(lresi))/lN
lLQS
rel <- Ahorro ~ Ingreso
rcres=recresid(rel)
rcres
cusum <- efp(rel, type=c("Rec-CUSUM"))
cusum
cusum
View(cusum)
plot(cusum)
sctest(rel)
cusum$process
cusum
View(cusum)
cusum$coef
lcum
model1 <- lm(Ahorro ~ Ingreso, data)
summary(model1)
lresi <- residuals(model1)
lcum=cumsum(lresi)/sd(lresi)
lN=length(lresi)
lcumq=cumsum(lresi^2)/sum(lresi^2)
a=0.948
co=0.14422 # Valor del cuantil aproximado para cusumsq para n/2
lLS=a*sqrt(lN)+2*a*c(1:length(lresi))/sqrt(lN)
lLI=-lLS
lLQS=co+(1:length(lresi))/lN
lLQI=-co+(1:length(lresi))/lN
plot(lcum,type="l",ylim=c(min(lLI),max(lLS)),xlab="t",ylab="",main="CUSUM")
lines(lLS,type="S",col="red")
lines(lLI,type="S",col="red")
plot(lcumq,type="l",xlab="t",ylab="",main="CUSUMSQ")
lines(lLQS,type="S",col="red")
lines(lLQI,type="S",col="red")
cusum$coef
rcres=recresid(rel)
rcres
rel <- Ahorro ~ Ingreso
rcres=recresid(rel)
rcres
cusum <- efp(rel, type=c("Rec-CUSUM"))
cusum$coef
cusum$process
plot(cusum)
rcres
cusum$process
lcumq2=cusum$process/sum(cusum$process)
lcumq2
plot(lcumq2,type="l",xlab="t",ylab="",main="CUSUMSQ")
lines(lLQS,type="S",col="red")
lines(lLQI,type="S",col="red")
lN=length(lresi)
lcumq=cumsum(lresi^2)/sum(lresi^2)
a=0.948
co=0.14422 # Valor del cuantil aproximado para cusumsq para n/2
lLS=a*sqrt(lN)+2*a*c(1:length(lresi))/sqrt(lN)
lLI=-lLS
lLQS=co+(1:length(lresi))/lN
lLQI=-co+(1:length(lresi))/lN
plot(lcumq2,type="l",xlab="t",ylab="",main="CUSUMSQ")
lines(lLQS,type="S",col="red")
lines(lLQI,type="S",col="red")
lcumq2
plot(cusum)
sctest(rel)
cusum <- efp(rel, type=c("Rec-CUSUM"))
cusum$process
plot(cusum)
sctest(rel)
rcres=recresid(rel)
rcres
rcres=recresid(Ahorro ~ Ingreso)
rcres
rcres=recresid(Ahorro ~ Ingreso - 1)
rcres
plot(cumsum(rcres), type="l")
plot(cumsum(rcres), type="Rec-CUSUM")
cusum <- efp(rel, type=c("Rec-CUSUM"))
cusum <- efp(rel, type=c("Rec-CUSUM"))
rcres=recresid(rel)
rcres
cusum <- efp(rel, type=c("Rec-CUSUM"))
plot(cusum)
plot(cumsum(rcres), type="l")
cusum$process
cusum$process
lresi <- cusum$process
lcum=cumsum(lresi)/sd(lresi)
lN=length(lresi)
lcumq=cumsum(lresi^2)/sum(lresi^2)
a=0.948
co=0.14422 # Valor del cuantil aproximado para cusumsq para n/2
lLS=a*sqrt(lN)+2*a*c(1:length(lresi))/sqrt(lN)
lLI=-lLS
lLQS=co+(1:length(lresi))/lN
lLQI=-co+(1:length(lresi))/lN
plot(lcum,type="l",ylim=c(min(lLI),max(lLS)),xlab="t",ylab="",main="CUSUM")
lines(lLS,type="S",col="red")
lines(lLI,type="S",col="red")
plot(lcumq,type="l",xlab="t",ylab="",main="CUSUMSQ")
lines(lLQS,type="S",col="red")
lines(lLQI,type="S",col="red")
plot(lcum,type="l",ylim=c(min(lLI),max(lLS)),xlab="t",ylab="",main="CUSUM")
lines(lLS,type="S",col="red")
lines(lLI,type="S",col="red")
Af=0.948
co=0.14422 # Valor del cuantil aproximado para cusumsq para n/2
lLS=Af*sqrt(lN)+2*Af*c(1:length(lresi))/sqrt(lN)
LS=Af*sqrt(lN)+2*Af*c(1:length(lresi))/sqrt(lN)
LI=-LS
N=length(lresi)
LS=Af*sqrt(lN)+2*Af*c(1:length(res))/sqrt(N)
LI=-LS
LQS=co+(1:length(res))/N
res <- cusum$process
cum=cumsum(res)/sd(res)
N=length(res)
cumq=cumsum(res^2)/sum(res^2)
Af=0.948
co=0.14422 # Valor del cuantil aproximado para cusumsq para n/2
LS=Af*sqrt(lN)+2*Af*c(1:length(res))/sqrt(N)
LI=-LS
LQS=co+(1:length(res))/N
LQI=-co+(1:length(res))/N
# Cusum
plot(cum,type="l",ylim=c(min(LI),max(LS)),xlab="t",ylab="",main="CUSUM")
lines(LS,type="S",col="red")
lines(LI,type="S",col="red")
# CUSUM Square
plot(cumq,type="l",xlab="t",ylab="",main="CUSUMSQ")
lines(LQS,type="S",col="red")
lines(LQI,type="S",col="red")
model1 <- lm(Ahorro ~ Ingreso, data)
summary(model1)
res <- model1$residuals
cum=cumsum(res)/sd(res)
N=length(res)
cumq=cumsum(res^2)/sum(res^2)
Af=0.948
co=0.14422 # Valor del cuantil aproximado para cusumsq para n/2
LS=Af*sqrt(lN)+2*Af*c(1:length(res))/sqrt(N)
LI=-LS
LQS=co+(1:length(res))/N
LQI=-co+(1:length(res))/N
# Cusum
plot(cum,type="l",ylim=c(min(LI),max(LS)),xlab="t",ylab="",main="CUSUM")
lines(LS,type="S",col="red")
lines(LI,type="S",col="red")
# CUSUM Square
plot(cumq,type="l",xlab="t",ylab="",main="CUSUMSQ")
lines(LQS,type="S",col="red")
lines(LQI,type="S",col="red")
# Cusum
plot(cum,type="l",ylim=c(min(LI),max(LS)),xlab="t",ylab="",main="CUSUM")
lines(LS,type="S",col="red")
lines(LI,type="S",col="red")
lcumq2=cusum$process/sum(cusum$process)
lcumq2
plot(lcumq2,type="l",xlab="t",ylab="",main="CUSUMSQ")
lines(lLQS,type="S",col="red")
lines(lLQI,type="S",col="red")
cusum <- efp(rel, type=c("Rec-CUSUM"))
cusum$process
plot(cusum)
sctest(rel)
# 4.1. Muestra total: 1970-1995 --------
plot(data$Ingreso, data$Ahorro,
xlab="Ahorro",
ylab="Ingreso",
main="1970-1995",
type="l")
abline(v=2347.3, col="purple")
rel <- Ahorro ~ Ingreso
rcres=recresid(rel)
rcres
cusum <- efp(rel, type=c("Rec-CUSUM"))
cusum$process
rcres
sctest(rel)
sum(cusum$process)
sum(rcres)
cusum$process
rcres-mean(rcres)
rcres
rcres-mean(rcres)
(rcres-mean(rcres))^2
View(df)
sigma2 <- num/den
num <-(rcres-mean(rcres))^2
den <- 26 - 2 - 1
sigma2 <- num/den
sctest(rel)
rcres/sigm2
rcres/sigma2
sum(rcres)/sigma2
sigm2
sigma2
sigma2 <- sum(num)/den
sigma2
sum(rcres)/sigma2
sctest(rel)
rcres
num <-sum((rcres-mean(rcres))^2)
den <- 26 - 2 - 1
m_rcres=sum(rcres)/(26-2)
num <-sum((rcres-m_rcres)^2)
den <- 26 - 2 - 1
sigma2 <- sum(num)/den
sigma2
sum(rcres)/sigma2
sctest(rel)
rcres
m_rcres
m_rcres=sum(rcres)/(26-2)
m_rcres
num <-sum((rcres-m_rcres)^2)
num
rcres
base2 <- cbind(rcres)
View(base2)
View(base2)
sigma2
cusum$process
cusum$process
rcres
plot(cusum)
cumsum(rel)
cumsum(rcres)
cumsum(rcres)/sigma2
sum(cumsum(rcres)/sigma2)
sum(cumsum(rcres))/sigma2
cumsum(rcres)/sigma2
cumsum(rcres)/sum(rcres)
plot(cumsum(rcres)/sum(rcres))
1:length(res)
cum=cumsum(rcres)/sd(rcres)
cum
N=length(rcres)
cumq=cumsum(rcres^2)/sum(rcres^2)
cumq
Af=0.948
co=0.14422 # Valor del cuantil aproximado para cusumsq para n/2
LS=Af*sqrt(N)+2*Af*c(1:length(res))/sqrt(N)
LI=-LS
LQS=co+(1:length(res))/N
LQS=co+(1:length(rcres))/N
LQI=-co+(1:length(rcres))/N
# CUSUM Square
plot(cumq,type="l",xlab="t",ylab="",main="CUSUMSQ")
lines(LQS,type="S",col="red")
lines(LQI,type="S",col="red")
cum=cumsum(rcres)/sd(rcres)
cum
# Identificación de numero de coeficientes inicial
model <- lm(Ahorro ~ Ingreso, data=data)
# Coeficientes recursivos
df <- data.frame(Ahorro, Ingreso)
df
n  <- (nrow(coef(summary(model))))+1   # k+1
n
# Recursividad
estimador <- lapply(seq(n, nrow(df)),
function(x) lm(Ahorro ~ Ingreso, data = df[1:x,]))
# Número de regresiones
g  <- length(estimador)
g
# Regresión
estimador[[10]]
summary(estimador[[10]])
# Extractor de parametros recursivos
b1 <- unlist(sapply(1:g,function(j) estimador[[j]]$coefficients[1]))
b2 <- unlist(sapply(1:g,function(j) estimador[[j]]$coefficients[2]))
b1
b2
# extractor de niveles de confianza
conf1 <- unlist(sapply(1:g, function(k) confint.default(estimador[[k]],1)))
conf2 <- unlist(sapply(1:g, function(k) confint.default(estimador[[k]],2)))
conf1
conf2
# arreglo de datos en forma matricial
arrb1 <- cbind(b1, t(conf1))
arrb1
arrb2 <- cbind(b2, t(conf2))
arrb2
# Graficas
par(mfrow=c(1,2))
matplot(arrb1,
type="l",
xlab="Tiempo",
ylab="Valores del parámetro estimado",
main="Estimación recursiva de b_0")
abline(v=11, col="purple")
matplot(arrb2,
type="l",
xlab="Tiempo",
ylab="Valores del parámetro estimado",
main="Estimación recursiva de b_1")
abline(v=11, col="purple")
# 4. Gráficos ----------
plot(data$Ingreso, data$Ahorro, type="l")
abline(v=2347.3, col="purple")
par(mfrow=c(1,1))
# 4. Gráficos ----------
plot(data$Ingreso, data$Ahorro, type="l")
abline(v=2347.3, col="purple")
# 4.1. Muestra total: 1970-1995 --------
plot(data$Ingreso, data$Ahorro,
xlab="Ahorro",
ylab="Ingreso",
main="1970-1995",
type="l")
abline(v=2347.3, col="purple")
# 4.2. Muestra 1: 1970-1981 ------
par(mfrow=c(1,2))
muestra1 <- subset(data, Año<1982)
plot(muestra1$Ingreso, muestra1$Ahorro,
xlab="Ahorro",
ylab="Ingreso",
main="1970-1981")
# Agregar la linea de regresion (y~x)
abline(lm(muestra1$Ahorro~muestra1$Ingreso), col="red")
View(df)
View(arrb1)
View(arrb1)
View(arrb1)
sctest(rel)
cum=cumsum(rcres)/sd(rcres)
cum
